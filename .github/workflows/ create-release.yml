name: Release Pipeline

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get Release Notes
        id: release_notes
        run: |
          last_tag=$(git describe --tags $(git rev-list --tags --max-count=1) 2>/dev/null || echo "")

          if [ -z "$last_tag" ]; then
            commits=$(git log --pretty=format:"- %s")
          else
            commits=$(git log "$last_tag"..HEAD --pretty=format:"- %s")
          fi

          escaped_commits=$(printf "%s" "$commits" | jq -Rsa .)

          echo "release_notes=$escaped_commits" >> $GITHUB_ENV

      - name: Generate Next Version Tag
        id: versioning
        run: |
          latest=$(git describe --tags $(git rev-list --tags --max-count=1) 2>/dev/null || echo "v0.0.0")

          major=$(echo $latest | awk -F. '{print $1}' | tr -d 'v')
          minor=$(echo $latest | awk -F. '{print $2}')
          patch=$(echo $latest | awk -F. '{print $3}')

          next_patch=$((patch + 1))

          next_version="v${major}.${minor}.${next_patch}"

          echo "next_version=$next_version" >> $GITHUB_ENV

      - name: Create Tag
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git tag -a ${{ env.next_version }} -m "Release version ${{ env.next_version }}"
          git push origin ${{ env.next_version }}

      - name: Create GitHub Release
        uses: actions/create-release@v1.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.next_version }}
          release_name: "Release ${{ env.next_version }}"
          body: ${{ fromJSON(env.release_notes) }}
          draft: false
          prerelease: false
